openapi: "3.0.2"
info:
  title: Authentication Service
  version: "1.0"
servers:
  - url: https://localhost:8080/api/
paths:
  /auth/register:
    post:
      tags:
        - Auth Service
      summary: Register a new User
      operationId: register
      description: Register a new user and return a JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtToken'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
  
  /auth/login:
    post:
      tags:
        - Auth Service
      summary: Login
      operationId: login
      description: Authenticate existing user and return a JWT token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtToken'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  
  /auth/token:
    post:
      tags:
        - Auth Service
      summary: Request a refresh token
      operationId: token
      description: Request a refresh token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JwtToken'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtToken'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
          
  # TODO add security to this endpoint
  /users/{userId}:
    get: 
      tags:
        - User Service
      summary: Get a User
      operationId: getUser
      description: Get a User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'  # You'll need to define this schema
        '404':
          description: User not found
        '500':
          description: Internal Server Error

components:
  schemas:
    
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    
    Register:
      allOf:
        - $ref: '#/components/schemas/Login'
      type: object
      properties:
        email:
          type: string
      required:
        - username
        - password
        - email
    
    JwtToken:
      type: object
      properties:
        userId:
          type: string
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - userId
        - accessToken
        - refreshToken
          
    User:
      type: object
      properties: 
        userId:
          type: string
        username:
          type: string
    
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code identifying the error type
        message:
          type: string
          description: Human-readable error message
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: The field that caused the error
              message:
                type: string
                description: Specific error message for this field
              value:
                type: string
                description: The invalid value that was provided
          description: Additional error details when applicable